// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render self and sub-components 1`] = `
.c1 {
  color: #fff;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: #333;
  color: #f5f5f5;
  font-size: 1.3rem;
  display: grid;
  grid-template-columns: repeat(auto-fit,200px);
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 15px 30px;
}

.c0 > * {
  text-align: center;
}

<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "testKey",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "testKey",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Component
      orgName="org!"
      userName="foo"
    >
      <styled.header>
        <header
          className="c0"
        >
          <Styled(Link)
            to="/"
          >
            <Link
              className="c1"
              replace={false}
              to="/"
            >
              <a
                className="c1"
                href="/"
                onClick={[Function]}
              >
                &lt;
              </a>
            </Link>
          </Styled(Link)>
          <span>
            org!
          </span>
          <span>
            foo
          </span>
        </header>
      </styled.header>
    </Component>
  </Router>
</MemoryRouter>
`;
